// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: package1/Enum1.proto

package com.dto;

/**
 * Protobuf enum {@code um.Enum1}
 */
public enum Enum1
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>FIELD0 = 0;</code>
   */
  FIELD0(0),
  /**
   * <code>FIELD1 = 1;</code>
   */
  FIELD1(1),
  /**
   * <code>FIELD2 = 2;</code>
   */
  FIELD2(2),
  /**
   * <code>FIELD3 = 3;</code>
   */
  FIELD3(3),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>FIELD0 = 0;</code>
   */
  public static final int FIELD0_VALUE = 0;
  /**
   * <code>FIELD1 = 1;</code>
   */
  public static final int FIELD1_VALUE = 1;
  /**
   * <code>FIELD2 = 2;</code>
   */
  public static final int FIELD2_VALUE = 2;
  /**
   * <code>FIELD3 = 3;</code>
   */
  public static final int FIELD3_VALUE = 3;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Enum1 valueOf(int value) {
    return forNumber(value);
  }

  public static Enum1 forNumber(int value) {
    switch (value) {
      case 0: return FIELD0;
      case 1: return FIELD1;
      case 2: return FIELD2;
      case 3: return FIELD3;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Enum1>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Enum1> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Enum1>() {
          public Enum1 findValueByNumber(int number) {
            return Enum1.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.dto.Enum1OuterClass.getDescriptor().getEnumTypes().get(0);
  }

  private static final Enum1[] VALUES = values();

  public static Enum1 valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Enum1(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:um.Enum1)
}

